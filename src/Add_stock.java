
import java.awt.event.KeyEvent;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author SHUBHAM
 */
public class Add_stock extends javax.swing.JFrame {

    Float total;
    /** Creates new form Add_stock */
    public Add_stock() {
        initComponents();
        setSize(1400,800);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        item = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ppu = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pid = new javax.swing.JTextField();
        ad = new javax.swing.JButton();
        rst = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        T1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Item Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(420, 170, 82, 20);

        item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemActionPerformed(evt);
            }
        });
        item.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                itemKeyTyped(evt);
            }
        });
        getContentPane().add(item);
        item.setBounds(510, 160, 110, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Quantity");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(580, 240, 53, 17);

        qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyActionPerformed(evt);
            }
        });
        qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtyKeyTyped(evt);
            }
        });
        getContentPane().add(qty);
        qty.setBounds(670, 230, 104, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        jLabel3.setText("ADD  STOCK");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(580, 50, 240, 45);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Price per Unit");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(560, 310, 95, 17);

        ppu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ppuKeyTyped(evt);
            }
        });
        getContentPane().add(ppu);
        ppu.setBounds(670, 300, 104, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Product ID");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(650, 170, 67, 17);

        pid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pidKeyTyped(evt);
            }
        });
        getContentPane().add(pid);
        pid.setBounds(730, 160, 143, 30);

        ad.setText("ADD");
        ad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adActionPerformed(evt);
            }
        });
        getContentPane().add(ad);
        ad.setBounds(560, 370, 90, 25);

        rst.setText("RESET");
        rst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rstActionPerformed(evt);
            }
        });
        getContentPane().add(rst);
        rst.setBounds(720, 370, 90, 25);

        T1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Quantity", "Price Per Unit"
            }
        ));
        jScrollPane1.setViewportView(T1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(460, 430, 452, 160);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemActionPerformed

    private void adActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adActionPerformed
        // TODO add your handling code here:
        try
        {
            if(item.getText().trim().equals("")|| qty.getText().trim().equals("") || ppu.getText().trim().equals("") || qty.getText().trim().equals(""))
            JOptionPane.showMessageDialog(null, "Field cannot be left blank");
        }
        catch(Exception e){}
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","mysql");
            PreparedStatement p=con.prepareStatement("insert into stock values(?,?,?,?)");
            p.setString(1,pid.getText());
            p.setString(2,item.getText());
            p.setInt(3, Integer.parseInt(qty.getText()));
            p.setFloat(4,Float.parseFloat(ppu.getText()));
            p.executeUpdate();
            
            con.close();
        }
        catch(SQLException e)
        {    
        }
        catch(ClassNotFoundException e)
        {
            
        }
          
           try{
        DefaultTableModel model=(DefaultTableModel) T1.getModel();
           String a=ppu.getText();
            String b=qty.getText();
            Float a1=Float.parseFloat(a);
            Float b1=Float.parseFloat(b);
            String product=pid.getText();
        model.addRow(new Object[] {product,item.getText(),b,a});
         
        
        }
        catch(Exception e){}
           item.setText("");
        qty.setText("");
        ppu.setText("");
       pid.setText("");

    }//GEN-LAST:event_adActionPerformed

    private void rstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rstActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel) T1.getModel();
        item.setText(null);
        pid.setText(null);
        qty.setText(null);
        ppu.setText(null);

    }//GEN-LAST:event_rstActionPerformed

    private void qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyActionPerformed

    private void qtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyTyped
        // TODO add your handling code here:
        if(qty.getText().length()<0)
        {}
  else
    {
    char st=evt.getKeyChar();
    
    if(Character.isDigit(st))
        {  
        }
else
{
    evt.consume();
}
    } 
        char st=evt.getKeyChar();
        if(st==KeyEvent.VK_ENTER)
                    {
                        
                                try
                                    {
                                        if(item.getText().trim().equals("")|| qty.getText().trim().equals("") || ppu.getText().trim().equals("") || qty.getText().trim().equals(""))
                                        JOptionPane.showMessageDialog(null, "Field cannot be left blank");
                                    }
                                catch(Exception e){}
                    }
                    
    }//GEN-LAST:event_qtyKeyTyped

    private void ppuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ppuKeyTyped
        // TODO add your handling code here:
             if(ppu.getText().length()<0)
                {}
             else
                {
                    char st=evt.getKeyChar();
                    
                    if(Character.isDigit(st))
                    {  }
                     else
                          evt.consume();
                   
                    if(st==KeyEvent.VK_ENTER)
                    {
                        
                                try
                                    {
                                        if(item.getText().trim().equals("")|| qty.getText().trim().equals("") || ppu.getText().trim().equals("") || qty.getText().trim().equals(""))
                                        JOptionPane.showMessageDialog(null, "Field cannot be left blank");
                                    }
                                catch(Exception e){}
                                try
                                    {
                                        Class.forName("com.mysql.jdbc.Driver");
                                        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","mysql");
                                        PreparedStatement p=con.prepareStatement("insert into stock values(?,?,?,?)");
                                        p.setString(1,pid.getText());
                                        p.setString(2,item.getText());
                                        p.setInt(3, Integer.parseInt(qty.getText()));
                                        p.setFloat(4,Float.parseFloat(ppu.getText()));
                                        p.executeUpdate();

                                        con.close();
                                    }
                                catch(SQLException e)
                                    { }
                                catch(ClassNotFoundException e)
                                    {}
          
                                try{
                                    DefaultTableModel model=(DefaultTableModel) T1.getModel();
                                    String a=ppu.getText();
                                    String b=qty.getText();
                                    Float b1=Float.parseFloat(b);
                                    String product=pid.getText();
                                    model.addRow(new Object[] {product,item.getText(),b,a});
                                   }
                                catch(Exception e){}
                                    item.setText("");
                                    qty.setText("");
                                    ppu.setText("");
                                    pid.setText("");

                                    }
                    
                    }
                    
                
    }//GEN-LAST:event_ppuKeyTyped

    private void itemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemKeyTyped
        // TODO add your handling code here:
        char st=evt.getKeyChar();
        if(st==KeyEvent.VK_ENTER)
                    {
                        
                                try
                                    {
                                        if(item.getText().trim().equals("")|| qty.getText().trim().equals("") || ppu.getText().trim().equals("") || qty.getText().trim().equals(""))
                                        JOptionPane.showMessageDialog(null, "Field cannot be left blank");
                                    }
                                catch(Exception e){}
                    }
                    
    }//GEN-LAST:event_itemKeyTyped

    private void pidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pidKeyTyped
        // TODO add your handling code here:
        char st=evt.getKeyChar();
        if(st==KeyEvent.VK_ENTER)
                    {
                        
                                try
                                    {
                                        if(item.getText().trim().equals("")|| qty.getText().trim().equals("") || ppu.getText().trim().equals("") || qty.getText().trim().equals(""))
                                        JOptionPane.showMessageDialog(null, "Field cannot be left blank");
                                    }
                                catch(Exception e){}
                    }
                    
    }//GEN-LAST:event_pidKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_stock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable T1;
    private javax.swing.JButton ad;
    private javax.swing.JTextField item;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pid;
    private javax.swing.JTextField ppu;
    private javax.swing.JTextField qty;
    private javax.swing.JButton rst;
    // End of variables declaration//GEN-END:variables

}
