package STOCK;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Asus
 */
public class homepage extends javax.swing.JFrame {

    /**
     * Creates new form homepage
     */
    public Float total;
    static Double totalvalue=0.0;
    public homepage() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH); 

setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        item = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        bill = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        T1 = new javax.swing.JTable();
        price = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        home = new javax.swing.JButton();
        tp = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        totalqty = new javax.swing.JLabel();
        ppu = new javax.swing.JLabel();
        lout = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        st = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1920, 1080));
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        setPreferredSize(new java.awt.Dimension(1366, 768));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("Item Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(430, 120, 110, 40);

        item.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemActionPerformed(evt);
            }
        });
        item.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                itemKeyTyped(evt);
            }
        });
        getContentPane().add(item);
        item.setBounds(550, 120, 560, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Total Stock");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(490, 380, 120, 40);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel3.setText("INVOICE");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(720, 20, 150, 70);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Price Per Unit");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(840, 380, 120, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Quantity Required");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(470, 440, 161, 40);

        qty.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyActionPerformed(evt);
            }
        });
        qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                qtyKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtyKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtyKeyTyped(evt);
            }
        });
        getContentPane().add(qty);
        qty.setBounds(640, 440, 90, 40);

        bill.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        bill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/STOCK/recpt.png"))); // NOI18N
        bill.setText("Bill");
        bill.setBorder(null);
        bill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billActionPerformed(evt);
            }
        });
        getContentPane().add(bill);
        bill.setBounds(920, 830, 130, 70);

        T1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        T1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Quanity", "Price"
            }
        ));
        T1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                T1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(T1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(650, 630, 430, 180);

        price.setBackground(new java.awt.Color(255, 255, 255));
        price.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(price);
        price.setBounds(970, 440, 130, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Total Price");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(840, 440, 95, 40);

        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/STOCK/homeick.png"))); // NOI18N
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        getContentPane().add(home);
        home.setBounds(26, 58, 86, 67);

        tp.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(tp);
        tp.setBounds(820, 840, 105, 30);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("RESET");
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(910, 540, 99, 41);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Grand Total");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(710, 840, 113, 30);

        totalqty.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(totalqty);
        totalqty.setBounds(640, 380, 64, 40);

        ppu.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(ppu);
        ppu.setBounds(980, 380, 75, 40);

        lout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/STOCK/logout.png"))); // NOI18N
        lout.setText("Logout");
        lout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loutActionPerformed(evt);
            }
        });
        getContentPane().add(lout);
        lout.setBounds(26, 143, 130, 50);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setText("Logged in as: ADMIN");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(26, 13, 133, 32);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/STOCK/billingcart.png"))); // NOI18N
        jButton2.setText("ADD");
        jButton2.setOpaque(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(720, 540, 110, 41);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(0, 0, 0, 0);

        st.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name"
            }
        ));
        st.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(st);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(580, 190, 452, 130);

        jLabel10.setIcon(new javax.swing.ImageIcon("C:\\Users\\Asus\\Documents\\NetBeansProjects\\NK\\images\\bbbccckk.png")); // NOI18N
        getContentPane().add(jLabel10);
        jLabel10.setBounds(0, 0, 1920, 1080);

        jLabel11.setText("jLabel11");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(0, 0, 1330, 880);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void billActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billActionPerformed
        // TODO add your handling code here:
        Date d = new Date();
      MessageFormat header= new MessageFormat("INVOICE"+"       "+d.toString());
    MessageFormat footer=  new MessageFormat("Page{0,number,integer}");
    try{
        T1.print(JTable.PrintMode.NORMAL, header, footer);    
    }
    catch(Exception e){}
    }//GEN-LAST:event_billActionPerformed
     
    private void T1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_T1MouseClicked
//T1.setRowSelectionAllowed(false);       // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel) T1.getModel();
         

        if(T1.getSelectedRow()==-1)
          if(T1.getRowCount()==0)
                JOptionPane.showMessageDialog(null,"Table is empty");
          else
                JOptionPane.showMessageDialog(null,"Select any row");
        
        else
        {
           
        item.setText(model.getValueAt(T1.getSelectedRow(), 0).toString());
        price.setText(model.getValueAt(T1.getSelectedRow(), 2).toString());
        qty.setText(model.getValueAt(T1.getSelectedRow(), 1).toString());
        model.removeRow(T1.getSelectedRow());
         try
                    {

                        Class.forName("com.mysql.jdbc.Driver");
                        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","mysql");
                        PreparedStatement p=con.prepareStatement("select * from stock where name=?");
                        p.setString(1, item.getText());
                        ResultSet rs=p.executeQuery();
                        if(rs.equals(0))
                        {
                         JOptionPane.showMessageDialog(null, "Enter a Valid Name");
                        }
                        else{
                        while(rs.next())
                        {
                            totalqty.setText(rs.getString("qty"));
                            ppu.setText(rs.getString("price"));
                        }
                        totalvalue=totalvalue-Float.parseFloat(price.getText());
                        }
                        rs.close();
                        p.close();
                        con.close();
                    }
                catch(SQLException e)
                    { }
                catch(ClassNotFoundException e)
                    {}
        
        
        }
    }//GEN-LAST:event_T1MouseClicked

    private void qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyPressed
       
    }//GEN-LAST:event_qtyKeyPressed

    private void qtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyReleased
        // TODO add your handling code here:
try
{
        float a=Float.parseFloat(ppu.getText());
            float b=Float.parseFloat(qty.getText());
           total=a*b;
  
        
        price.setText(total+"");      
}
catch(Exception e)
{
    
}
    
    }//GEN-LAST:event_qtyKeyReleased

    private void qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_qtyActionPerformed

    private void qtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyTyped
try
{
        if(qty.getText().length()<0)
        {}
  else
{
    char st=evt.getKeyChar();
//if length is greater than 9 put that condtn in if part for length constraint
if(!Character.isDigit(st))
{  
    evt.consume();
}
else
{}
  if(st==KeyEvent.VK_ENTER)
  {
 // TODO add your handling code here:

      if(Integer.parseInt(qty.getText())==0)
      {
          JOptionPane.showMessageDialog(null,"Enter a valid quantity");
      }
      else{
  DefaultTableModel model=(DefaultTableModel) T1.getModel();

        String a=ppu.getText();
        String b=qty.getText();
        Float a1=Float.parseFloat(a);
        Float b1=Float.parseFloat(b);
        total=a1*b1;
        String s;

        try{
            
                {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","mysql");
                    PreparedStatement p=con.prepareStatement("select name,qty from stock where name=?");
                    p.setString(1, item.getText().toString());

                    ResultSet rs=p.executeQuery();

                    while(rs.next())
                    {
                        if(b1>Integer.parseInt(rs.getString("qty")))
                        {
                            JOptionPane.showMessageDialog(null, "Not Enough Stock");
                        }
                        else{
                            model.addRow(new Object[]{ item.getText(),qty.getText(),total});

                        totalvalue=totalvalue+Float.parseFloat(price.getText());

                        item.setText("");
                        totalqty.setText("");
                        qty.setText("");
                        ppu.setText("");
                        price.setText("");
                        System.out.println("first");
                        int count=model.getRowCount();
                        for(int i=0;i<count;i++)
                        {
                            s=((String)model.getValueAt(i,0));
                            
                            Integer quantity=Integer.parseInt((String) model.getValueAt(i, 1));
                            PreparedStatement p1=con.prepareStatement("update stock set qty=? where name=?");
                            Integer x=0;
                            x=Integer.parseInt(rs.getString("qty"));
                            System.out.println("value of x before minus");
                            x=x-quantity;
                            System.out.println("value of x after minus");
                            p1.setInt(1, x);
                            p1.setString(2, s);
                            p1.executeUpdate();
                        }

                    }

                }

            }
        }catch(Exception e){}

        tp.setText(totalvalue+"");
  }}       
}     
}
catch(Exception e){}
    }//GEN-LAST:event_qtyKeyTyped

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
        homee h=new homee();
        h.setVisible(true);
         this.dispose();
    }//GEN-LAST:event_homeActionPerformed

    private void itemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemKeyTyped
        // TODO add your handling code here:
        char st=evt.getKeyChar();
        if(st==KeyEvent.VK_ENTER)
    {

    try
        {
            if(item.getText().trim().equals(""))
            JOptionPane.showMessageDialog(null, "Please Enter the Product Name!");

            else{

                    try
                        {

                            Class.forName("com.mysql.jdbc.Driver");
                            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","mysql");
                            PreparedStatement p=con.prepareStatement("select * from stock where name=?");
                            p.setString(1, item.getText());
                            ResultSet rs=p.executeQuery();
                            if(rs.equals(0))
                            {
                             JOptionPane.showMessageDialog(null, "Enter a Valid Name");
                            }
                            else{
                            while(rs.next())
                            {
                            
                                totalqty.setText(rs.getString("qty"));
                                ppu.setText(rs.getString("price"));
                            }
                            }
                            rs.close();
                            p.close();
                            con.close();
                        }
                    catch(SQLException e)
                        { }
                    catch(ClassNotFoundException e)
                        {}

                                }
                        }
                    catch(Exception e){}
    }
         char ch=evt.getKeyChar();
        if(ch==KeyEvent.VK_BACK_SPACE)
        
        {
            
            totalqty.setText("");
            ppu.setText("");
            
        } 
    }//GEN-LAST:event_itemKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        tp.setText("");
      item.setText("");
        totalqty.setText("");
        qty.setText("");
       ppu.setText("");
       price.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void itemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemKeyReleased
  st.setVisible(true);
        int i=0;
        char c=evt.getKeyChar();

        DefaultTableModel model=(DefaultTableModel) st.getModel();
        if(item.getText().trim().equals(""))
        {
        while(true)
            model.removeRow(i);}
        if(c==KeyEvent.VK_BACK_SPACE)
        {
       
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","mysql");
            PreparedStatement pp=con.prepareStatement("select name from stock where name like ?");
            pp.setString(1,item.getText()+"%");
            ResultSet rs=pp.executeQuery();
            while(rs.next())
            {
                
                model.addRow(new Object[] {rs.getString("name")});

                
            }
        }catch(Exception e){}
        }
        else
        try
        {
            
        
          while(i<model.getRowCount())
            model.removeRow(i);
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","mysql");
            PreparedStatement p=con.prepareStatement("select name from stock where name like ?");
            p.setString(1,item.getText()+"%");
            ResultSet rs=p.executeQuery();
           if(rs.equals(0))
                JOptionPane.showMessageDialog(null, "Enter a Valid Name");

            else{
            while(rs.next())
            {
                 model.addRow(new Object[] {rs.getString("name")});

              
            }
           
            }
            rs.close();
            p.close();
            con.close();
        }
        catch(SQLException e)
        { }
        catch(ClassNotFoundException e)
        {}
        catch(Exception e)
        {}                      
    
    }//GEN-LAST:event_itemKeyReleased

    private void loutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loutActionPerformed
        // TODO add your handling code here:
        loginpage l=new loginpage();
        l.setVisible(true);
        empbill e=new empbill();
        e.dispose();
    }//GEN-LAST:event_loutActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
if(Integer.parseInt(qty.getText())==0)
      {
          JOptionPane.showMessageDialog(null,"Enter a valid quantity");
      }
      else{
  DefaultTableModel model=(DefaultTableModel) T1.getModel();

        String a=ppu.getText();
        String b=qty.getText();
        Float a1=Float.parseFloat(a);
        Float b1=Float.parseFloat(b);
        total=a1*b1;
        String s;

        try{
            //DefaultTableModel model=(DefaultTableModel) T1.getModel();
            
         
                {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","mysql");
                    PreparedStatement p=con.prepareStatement("select name,qty from stock where name=?");
                    p.setString(1, item.getText().toString());

                    ResultSet rs=p.executeQuery();

                    while(rs.next())
                    {
                        if(b1>Integer.parseInt(rs.getString("qty")))
                        {
                            JOptionPane.showMessageDialog(null, "Not Enough Stock");
                        }
                        else{
                            model.addRow(new Object[]{ item.getText(),qty.getText(),total});

                        totalvalue=totalvalue+Float.parseFloat(price.getText());

                        item.setText("");
                        totalqty.setText("");
                        qty.setText("");
                        ppu.setText("");
                        price.setText("");
                        System.out.println("first");
                        int count=model.getRowCount();
                        for(int i=0;i<count;i++)
                        {
                            s=((String)model.getValueAt(i,0));
                            
                            Integer quantity=Integer.parseInt((String) model.getValueAt(i, 1));
                            PreparedStatement p1=con.prepareStatement("update stock set qty=? where name=?");
                            Integer x=0;
                            x=Integer.parseInt(rs.getString("qty"));
                            System.out.println("value of x before minus");
                            x=x-quantity;
                            System.out.println("value of x after minus");
                            p1.setInt(1, x);
                            p1.setString(2, s);
                            p1.executeUpdate();
                        }

                    }

                }

            }
        }catch(Exception e){}

        tp.setText(totalvalue+"");
    }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemActionPerformed

    private void stMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel) st.getModel();
        int i=st.getSelectedRow();
        String s=((String) model.getValueAt(st.getSelectedRow(), 0));
        try
                {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","mysql");
                    PreparedStatement p=con.prepareStatement("select * from stock where name=?");
                    p.setString(1, s);
                    ResultSet rs=p.executeQuery();
                    while(rs.next())
                        {
                            item.setText(rs.getString("name"));
                            totalqty.setText(rs.getString("qty"));
                            ppu.setText(rs.getString("price"));
                            model.removeRow(st.getSelectedRow());
                        }

                }
            catch(SQLException e)
                {System.out.println("Inside SQL");
                e.printStackTrace();}
            catch(ClassNotFoundException e)
                {System.out.println("Inside ClassNotFound");}
            catch(Exception e){System.out.println("Inside Exception");

            }
    }//GEN-LAST:event_stMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new homepage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable T1;
    private javax.swing.JButton bill;
    private javax.swing.JButton home;
    private javax.swing.JTextField item;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton lout;
    private javax.swing.JLabel ppu;
    private javax.swing.JLabel price;
    private javax.swing.JTextField qty;
    private javax.swing.JTable st;
    private javax.swing.JLabel totalqty;
    private javax.swing.JLabel tp;
    // End of variables declaration//GEN-END:variables

    private Double Double(Object valueAt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
